variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Commit
  displayName:  Commit Stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
    - checkout: self        
    - bash: |
        pwd
        ls -a
        echo $(Build.BuildId)
      displayName: list folders   
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 3.x
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: dotnet restore 
      displayName: Restore Dependencies

    - script: dotnet build -c Release
      displayName: Build Solution

    - script: dotnet publish src/Owlvey.Falcon.Authority.Presentation/Owlvey.Falcon.Authority.Presentation.csproj --no-restore  -c Release
      displayName: Publish 

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/src/Owlvey.Falcon.Authority.Presentation/bin/Release/netcoreapp3.1/publish'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/Identity.zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)/Identity.zip'
        artifactName: IdentityWeb        


- stage: VirtualizationStage
  displayName:  Virtualization Testing Stage 
  jobs:  
  - job: VirtualTesting
    displayName: Testing
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
    - download: current
      artifact: IdentityWeb
    - bash: |
        pwd    
        ls -a
        echo '$(Build.ArtifactStagingDirectory)'        
        echo '$(Build.BinariesDirectory)'        
        echo '$(Build.SourcesDirectory)'        
        echo '$(System.DefaultWorkingDirectory)'        
        echo '$(Pipeline.Workspace)'        


- stage: AutomationStage
  displayName:  Automation Stage 
  jobs:  
  - job: AutomateTesting
    displayName: Testing
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
    - download: current
      artifact: IdentityWeb    


- stage: ReleaseStageAzure
  displayName:  Release Stage Azure
  jobs:  
  - deployment: DeployWeb
    displayName: deploy Web App
    pool:
      vmImage: 'Ubuntu-18.04'  
    environment: 'azure-prod'
    strategy:    
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: IdentityWeb

          - bash: |
              pwd    
              ls -a
              ls '$(System.DefaultWorkingDirectory)'        

          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'azurecon'
              appName: 'owlvey-falcon-prod-identity'
              package: '$(Pipeline.Workspace)/IdentityWeb/Identity.zip'
              deploymentMethod: zipDeploy
              appSettings: -ASPNETCORE_ENVIRONMENT Azure


- stage: ReleaseStageDocker
  displayName:  Release Stage Docker
  jobs:  
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
    - checkout: self      
    - download: current
      artifact: IdentityWeb

    - bash: |
        cp src/Owlvey.Falcon.Authority.Presentation/Dockerfile  '$(Build.ArtifactStagingDirectory)/Dockerfile'   
 
    - task: ExtractFiles@1
      inputs:
        archiveFilePatterns: '$(Pipeline.Workspace)/IdentityWeb/Identity.zip'
        destinationFolder: '$(Build.ArtifactStagingDirectory)/bin/Publish'
        cleanDestinationFolder: true 

    - task: Docker@2
      displayName: build publish docker
      inputs:
        containerRegistry: 'Owlvey Docker Connection'
        repository: owlvey/authority
        Dockerfile: '$(Build.ArtifactStagingDirectory)/Dockerfile'
        buildContext: '$(Build.ArtifactStagingDirectory)'
        tags: |
         $(Build.BuildId)
         latest
